# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import basic_pb2 as basic__pb2


class FileStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.upload = channel.stream_unary(
        '/File/upload',
        request_serializer=basic__pb2.FileBody.SerializeToString,
        response_deserializer=basic__pb2.Response.FromString,
        )


class FileServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def upload(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FileServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'upload': grpc.stream_unary_rpc_method_handler(
          servicer.upload,
          request_deserializer=basic__pb2.FileBody.FromString,
          response_serializer=basic__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'File', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class TrainStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.train = channel.unary_stream(
        '/Train/train',
        request_serializer=basic__pb2.GuidInfo.SerializeToString,
        response_deserializer=basic__pb2.TrainResult.FromString,
        )


class TrainServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def train(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TrainServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'train': grpc.unary_stream_rpc_method_handler(
          servicer.train,
          request_deserializer=basic__pb2.GuidInfo.FromString,
          response_serializer=basic__pb2.TrainResult.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Train', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class PredictResultStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.predictResult = channel.stream_stream(
        '/PredictResult/predictResult',
        request_serializer=basic__pb2.PredictBody.SerializeToString,
        response_deserializer=basic__pb2.PredictResultFile.FromString,
        )


class PredictResultServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def predictResult(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PredictResultServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'predictResult': grpc.stream_stream_rpc_method_handler(
          servicer.predictResult,
          request_deserializer=basic__pb2.PredictBody.FromString,
          response_serializer=basic__pb2.PredictResultFile.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'PredictResult', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
